{"version":3,"sources":["services/contacts.js","App.js","index.js"],"names":["baseURL","axios","get","then","response","data","newObject","post","id","delete","put","Heading","text","SearchFilter","filterText","onChange","value","PersonForm","addNewContact","handleNameInput","newName","hendleNumberInput","newNumber","onSubmit","type","Person","person","deleteContactOf","name","number","onClick","Persons","personsToShow","map","Notification","notificationMessage","startsWith","className","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterText","setNotificationMessage","useEffect","console","log","phonebookService","initialContacts","length","clearFields","filter","toLowerCase","includes","event","target","preventDefault","p","indexOf","returnedObject","concat","setTimeout","window","confirm","find","modifiedPerson","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20428558.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nlet baseURL = 'https://afternoon-springs-19305.herokuapp.com/api/persons';\r\n\r\nconst getAll = () => {\r\n  let request = axios.get(baseURL);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst create = (newObject) => {\r\n  let request = axios.post(baseURL, newObject);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst removeContact = (id) => {\r\n  let request = axios.delete(`${baseURL}/${id}`);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst editContact = (id, newObject) => {\r\n  let request = axios.put(`${baseURL}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nexport default {getAll, create, removeContact, editContact}","import React, { useState, useEffect } from 'react'\r\nimport phonebookService from './services/contacts'\r\nimport './index.css'\r\n\r\nconst Heading = ({text}) => <h2>{text}</h2>\r\n\r\nconst SearchFilter = ({filterText, onChange}) => {\r\n  return (\r\n    <div>\r\n      filter shown with : <input value={filterText} onChange={onChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PersonForm = ({addNewContact, handleNameInput, newName, hendleNumberInput, newNumber}) => {\r\n  return (\r\n    <form onSubmit={addNewContact}>\r\n      <div>\r\n        name: <input onChange={handleNameInput} value={newName}/>\r\n      </div>\r\n      <div>\r\n        number : <input onChange={hendleNumberInput} value={newNumber}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst Person = ({person, deleteContactOf}) => {\r\n  return (\r\n    <li>\r\n      {person.name} : {person.number}\r\n      <button onClick={()=>deleteContactOf(person.id)}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n\r\nconst Persons = ({personsToShow, deleteContactOf}) => {\r\n  return (\r\n    <ul>\r\n        {personsToShow.map(person => <Person key={person.id} person={person} deleteContactOf={deleteContactOf}/>)}\r\n      </ul>\r\n  )\r\n}\r\n\r\nconst Notification = ({notificationMessage}) => {\r\n  //console.log(`message is ${notificationMessage}`);\r\n  \r\n  if(notificationMessage === null)\r\n    return null;\r\n  //console.log(`test ${notificationMessage.startsWith('Succcess')}`);\r\n  if(notificationMessage.startsWith('Success')){\r\n    return (\r\n      <div className='success'>\r\n        {notificationMessage}\r\n      </div>\r\n    )\r\n  }\r\n  else{\r\n    return (\r\n      <div className='error'>\r\n        {notificationMessage}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber] = useState('')\r\n  const [ filterText, setFilterText ] = useState('')\r\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\r\n\r\n  useEffect(()=>{\r\n    console.log('effect');\r\n    phonebookService\r\n      .getAll()\r\n      .then(initialContacts => setPersons(initialContacts))\r\n  },[]);\r\n  console.log('render ',persons.length,' contacts');\r\n\r\n  const handleNameInput = (event) => {\r\n    setNewName(event.target.value);\r\n  }\r\n\r\n  const hendleNumberInput = (event) => {\r\n    setNewNumber(event.target.value);\r\n  }\r\n\r\n  const handleFilterTextInput = (event) => {\r\n    setFilterText(event.target.value);\r\n  }\r\n\r\n  \r\n\r\n  const clearFields = () => {\r\n    setNewName('');\r\n    setNewNumber('');\r\n    setFilterText('');\r\n  }\r\n\r\n  const addNewContact = (event) => {\r\n    \r\n    event.preventDefault();\r\n    let allNames = persons.map(p => p.name);\r\n    if(allNames.indexOf(newName) !== -1){\r\n      if(window.confirm(`Do you want to update the number of ${newName} ?`)){\r\n        let person = persons.find(p => p.name === newName);\r\n        let modifiedPerson = {...person, number : newNumber};\r\n        phonebookService\r\n          .editContact(modifiedPerson.id, modifiedPerson)\r\n          .then(returnedObject => {\r\n            setPersons(persons.map(p => p.id === returnedObject.id ? returnedObject : p));\r\n            setNotificationMessage(`Successfully changed contact number of '${returnedObject.name}'`);\r\n            setTimeout(() => {\r\n              setNotificationMessage(null)\r\n            }, 5000);\r\n          })\r\n          .catch(error => {\r\n            setNotificationMessage(`Contact '${person.name}' has already been removed from server`);\r\n            setTimeout(() => {\r\n              setNotificationMessage(null)\r\n            }, 5000);\r\n            setPersons(persons.filter(p => p.id !== person.id))\r\n          })\r\n      }\r\n      clearFields();\r\n      return;\r\n    }\r\n    \r\n    let newPerson = {\r\n      name: newName,\r\n      number : newNumber \r\n    }\r\n    \r\n    phonebookService\r\n      .create(newPerson)\r\n      .then(returnedObject => {\r\n        setPersons(persons.concat(returnedObject));\r\n        clearFields();\r\n        setNotificationMessage(`Successfully added new contact '${returnedObject.name}'`);\r\n            setTimeout(() => {\r\n              setNotificationMessage(null)\r\n            }, 5000);\r\n      })    \r\n  }\r\n  \r\n  let personsToShow = filterText === '' ? persons : persons.filter(person => person.name.toLowerCase().includes(filterText.toLowerCase()));\r\n  \r\n  const deleteContactOf = (id) => {\r\n    let person = persons.find(p => p.id === id);\r\n    if(window.confirm(`Do you really want to delete ${person.name}?`)){\r\n      phonebookService\r\n        .removeContact(id)\r\n        .then(returnedObject => {\r\n          //console.log(returnedObject);\r\n          setPersons(persons.filter(p => p.id !== id));\r\n          setNotificationMessage(`Successfully deleted contact '${person.name}'`);\r\n            setTimeout(() => {\r\n              setNotificationMessage(null)\r\n            }, 5000);\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Heading text=\"Phonebook\" />\r\n\r\n      <Notification notificationMessage={notificationMessage} />\r\n      \r\n      <SearchFilter filterText={filterText} onChange={handleFilterTextInput} />\r\n      \r\n      <Heading text=\"Add a New\" />\r\n      \r\n      <br/>\r\n      \r\n      <PersonForm \r\n      addNewContact={addNewContact} \r\n      handleNameInput={handleNameInput}\r\n      newName = {newName}\r\n      hendleNumberInput = {hendleNumberInput}\r\n      newNumber = {newNumber}\r\n      />\r\n      \r\n      <br/>\r\n      <Heading text=\"Number\" />\r\n      \r\n      <Persons personsToShow={personsToShow} deleteContactOf={deleteContactOf}/>\r\n      \r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}